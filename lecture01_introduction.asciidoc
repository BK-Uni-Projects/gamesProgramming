= Games Programming Introduction

== Teaching Style

* Practice-led
  ** lectures will introduce concepts, techniques, things to think about
  ** effective learning will require lots of programming engagement
* Ask questions, query norms
* Discuss with each other
  ** Constructive Critique
* Critique my code too

== Module Overview 1

* Embedded through out
  ** C++, libraries, engines and other languages
  ** Modern C++
  ** Efficiency
  ** Good Programming Practice
  ** Software Engineering Best Practices, e.g.
    *** Versioning
    *** Reading Documentation

== Module Overview 2

* External Libraries
* Build Systems

* Cross-platform
  ** libraries (those we're using and alternatives to look at (but NOT use))
  ** concerns

* Windows (*not MS Windows* ...)
  ** Creating
  ** (re)Sizing
  ** Moving
  ** Fullscreen

* Handling input
  ** keyboard
  ** mouse
  ** game pad

* Sprites
  ** loading
  ** displaying
  ** moving
  ** animating

* Game State and Scene Graphs

* Logging

* On-screen Text and Menus


* Models and Simulation
  ** Fix your timestep
  ** Interpolation
  ** Determinism (briefly)
  ** Movement and basic physics
  ** Collision detection & collision response
  ** Spatial Partitioning


* Sound/Audio
  ** Sound effects and Streaming
  ** DSP and spatialisation (3D)

== Stretch content

* Networking and multiplayer games
* File formats, serialisation, and compression

== Assignments

* Single, 100% assignment
* Build a complete game that demonstrates both:
  ** Games Programming capabilities (i.e. high quality code)
  ** Specific Games Programming techniques we've covered in class
* Space for personal expression and portfolio

== Workshops

* Sequences of exercises/tutorials
  ** Developing the skills you'll integrate together the your assignment
* You can (should) start the assignment soon

== Discussion - Game Design

* What did you design in Game Design last year?
  ** how complex was this?


== Assembling a toolset

* C++ (required)
* SDL2 (required)
* Conan.icon (required)
* git (recommended)

== Recommended Reading/Resources

* Game engine architecture - Jason Gregory 2014 (physical copies in the library)
* Game programming patterns - Robert Nystrom c2014
  ** free online @ http://gameprogrammingpatterns.com/contents.html (also printed copies in the library)
* SDL game development - Shaun Mitchell 2013 (ebook through library)

Check reading list on Blackboard for complete list

== Blogs etc

* http://ithare.com/[ITHare] http://ithare.com/feed/[RSS feed]
